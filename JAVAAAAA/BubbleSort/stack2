public class DynamicStack {

    private int[] stackArray;
    private int top;
    private int size;

    public DynamicStack(int size) {
        this.size = size;
        stackArray = new int[size];
        top = -1;
    }

    public void push(int element) {
        if (isFull()) {
            increaseSize();
        }
        stackArray[++top] = element;
    }

    public int pop() {
        if (isEmpty()) {
            System.out.println("Stack is empty");
            return -1;
        } else {
            int element = stackArray[top--];
            return element;
        }
    }

    public int peek() {
        if (isEmpty()) {
            System.out.println("Stack is empty");
            return -1;
        } else {
            int element = stackArray[top];
            return element;
        }
    }

    public boolean isEmpty() {
        return (top == -1);
    }

    public boolean isFull() {
        return (top == size - 1);
    }

    private void increaseSize() {
        int[] newArray = new int[size * 2];
        for (int i = 0; i < size; i++) {
            newArray[i] = stackArray[i];
        }
        stackArray = newArray;
        size = size * 2;
    }
}
